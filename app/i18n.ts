import i18n from 'i18next';
import { InitOptions } from 'i18next';

// Define resources with proper namespace structure
const resources = {
  en: {
    translation: {
      common: {
        loading: 'Loading...',
        new: 'New',
        success: 'Success',
        error: 'Error',
        save: 'Save',
        cancel: 'Cancel',
        delete: 'Delete',
        edit: 'Edit',
        close: 'Close',
        search: 'Search',
        language: 'Language',
        theme: 'Theme',
        logout: 'Logout',
        english: 'English',
        chinese: 'Chinese',
        notifications: 'Notifications',
        noNotifications: 'No notifications',
        lightMode: 'Light Mode',
        darkMode: 'Dark Mode',
        profile: 'Profile',
        settings: 'Settings',
        yes: 'Yes',
        no: 'No',
        selectAll: 'Select all',
        selectRow: 'Select row',
        actions: 'Actions',
        create: 'Create',
        update: 'Update',
        saving: 'Saving...',
        view: 'View',
        viewDetails: 'View Details',
        required: 'Required',
        optional: 'Optional',
        show: 'Show',
        perPage: 'per page',
        unknown: 'Unknown',
      },
      navigation: {
        dashboard: 'Dashboard',
        inventory: 'Inventory',
        stockModule: 'Stock',
        divided: 'Divided',
        inspection: 'Inspection',
        sales: 'Sales',
        customers: 'Customers',
        orders: 'Orders',
        quotes: 'Quotes',
        tasks: 'Tasks',
        calendar: 'Calendar',
        kanban: 'Kanban',
        users: 'Users',
      },
      dashboard: {
        title: 'Dashboard',
        overview: 'Overview',
        totalSales: 'Total Sales',
        totalInventory: 'Total Inventory',
        pendingTasks: 'Pending Tasks',
        activeUsers: 'Active Users',
        income: 'Income',
        expenses: 'Expenses',
        profit: 'Profit',
        viewAll: 'View All',
        amount: 'Amount',
        date: 'Date',
        status: 'Status',
        type: 'Type',
        welcome: 'Welcome to your dashboard',
        analytics: 'Analytics',
        analyticsDesc: 'View your business analytics',
        analyticsContent: 'Analytics content will appear here',
        reports: 'Reports',
        reportsDesc: 'View and generate reports',
        reportsContent: 'Reports content will appear here',
        error: 'Dashboard Error',
        errorDesc: 'Failed to load dashboard data',
        cards: {
          inventory: 'Inventory',
          itemsInStock: 'Items in Stock',
          stock: 'Stock',
          divided: 'Divided',
          sales: 'Sales',
          revenueThisMonth: 'Revenue this Month',
          orders: 'Orders',
          tasks: 'Tasks',
          pendingTasks: 'Pending Tasks',
        },
        finance: {
          title: 'Finance',
          totalRevenue: 'Total Revenue',
          incomeFromSales: 'Income from Sales',
          totalExpenses: 'Total Expenses',
          costsAndExpenses: 'Costs and Expenses',
          netIncome: 'Net Income',
          revenueLessExpenses: 'Revenue Less Expenses',
          cashBalance: 'Cash Balance',
          availableFunds: 'Available Funds',
          accountsReceivable: 'Accounts Receivable',
          moneyOwedByCustomers: 'Money Owed by Customers',
          accountsPayable: 'Accounts Payable',
          moneyOwedToVendors: 'Money Owed to Vendors',
        },
        transactions: {
          title: 'Recent Transactions',
          recentTransactions: 'Recent Transactions',
          noTransactions: 'No transactions to display',
        },
      },
      inventory: {
        stock: {
          title: 'Stock Management',
          jumboRollNo: 'Jumbo Roll No.',
          barcodeId: 'Barcode ID',
          type: 'Type',
          gsm: 'GSM',
          width: 'Width',
          length: 'Length',
          remainingLength: 'Remaining Length',
          low: 'Low',
          weight: 'Weight',
          containerNo: 'Container No.',
          arrivalDate: 'Arrival Date',
          inspectedBy: 'Inspected by',
          orderInfo: 'Order Info',
          order: 'Order',
          date: 'Date',
          customer: 'Customer',
          printLabel: 'Print Label',
          printLabels: 'Print Labels',
          addNew: 'Add New Stock',
          availableStock: 'Available Stock',
          soldStock: 'Sold Stock',
          stockOut: 'Stock Out',
          deleteSuccess: 'Selected stock items have been deleted.',
          deleteError: 'Failed to delete stock items. Please try again.',
          deleteSelected: 'Delete Selected',
          size: 'Size',
          status: 'Status',
          note: 'Note',
          editStock: 'Edit Stock',
          addStock: 'Add New Stock',
          editStockDescription: 'Edit the details of an existing stock item.',
          addStockDescription: 'Enter the details to add a new stock item to the inventory.',
          selectType: 'Select a type',
          generateRollNoError: 'Failed to generate roll number. Please try again.',
          barcodeScanned: 'Barcode scanned successfully!',
          scanError: 'Failed to scan barcode. Please try again.',
          saveError: 'Failed to save stock',
        },
        divided: {
          title: 'Divided Stock Management',
          rollNo: 'Roll No',
          type: 'Type',
          gsm: 'GSM',
          current: 'Current',
          containerNo: 'Container No',
          arrivalDate: 'Arrival Date',
          width: 'Width',
          length: 'Length',
          weight: 'Weight',
          inspected: 'Inspected',
          inspectedBy: 'Inspected by',
          orderInfo: 'Order Info',
          order: 'Order',
          date: 'Date',
          customer: 'Customer',
          printLabel: 'Print Label',
          printLabels: 'Print Labels',
          availableStock: 'Available Stock',
          soldStock: 'Sold Stock',
          confirmDelete: 'Are you sure you want to delete the selected items?',
          deleteSuccess: '{{count}} items deleted successfully.',
          deleteError: 'Failed to delete items. Please try again.',
          deleteSelected: 'Delete Selected',
          confirmDeleteItem: 'Are you sure you want to delete this item?',
          deleteItemSuccess: 'Item deleted successfully',
          deleteItemError: 'Failed to delete item',
          addDividedStock: 'Add Divided Stock',
          chooseAddMethod: 'Choose how you want to add divided stock',
          currentStock: 'Current Stock',
          newFromStock: 'New from Stock',
          dividedRoll: 'Divided Roll',
        },
        inspection: {
          title: 'Inspection',
          noMatchingItem: 'No matching uninspected item found for this barcode',
          scanError: 'Failed to scan barcode. Please try again.',
          noteViaBarcode: 'Inspected via barcode scan',
          stockInspectError: 'Failed to inspect stock',
          dividedInspectError: 'Failed to inspect divided stock',
          usingBackCamera: 'Using back camera',
          usingFrontCamera: 'Using front camera',
          scanning: 'Scanning...',
          scanBarcode: 'Scan Barcode',
          itemsToInspect: 'Items to Inspect',
          waitingItems: '{{count}} items waiting for inspection',
          successTitle: 'Item Successfully Inspected',
          successDescription: '{{item}} has been successfully inspected. Would you like to scan another item?',
          noDone: 'No, I\'m Done',
          yesScanMore: 'Yes, Scan Another',
          loadError: 'Something went wrong while loading inspection data. Please try refreshing the page.',
          idNumber: 'ID Number',
          noItemsToInspect: 'No items to inspect',
          inspected: 'Inspected',
          inspect: 'Inspect',
          inspectStock: 'Inspect Stock',
          inspectDivided: 'Inspect Divided Stock',
          inspectStockDescription: 'You are about to inspect {{rollNo}}. This action cannot be undone.',
          inspectDividedDescription: 'You are about to inspect divided roll {{rollNo}}. This action cannot be undone.',
          notePlaceholder: 'Add inspection notes (optional)',
          inspecting: 'Inspecting...',
          confirmInspection: 'Confirm Inspection',
          clickCameraToToggle: 'click camera button to toggle',
          stockInspectedTitle: 'Stock Inspected',
          stockInspectedDescription: 'Successfully inspected {{rollNo}}',
          dividedInspectedTitle: 'Divided Stock Inspected',
          dividedInspectedDescription: 'Successfully inspected {{rollNo}}',
          inspectionError: 'Failed to complete inspection',
          inspectionCompleted: 'Inspection Completed',
          itemInspected: 'Item successfully inspected',
          inspectItem: 'Inspect Item',
          scanConfirmBarcode: 'Scan/Confirm Barcode',
          enterBarcode: 'Enter or scan barcode',
          inspectionRemarks: 'Inspection Remarks',
          remarksPlaceholder: 'Enter any notes or observations about this item',
          completeInspection: 'Complete Inspection',
          barcodeScanned: 'Barcode scanned successfully',
          barcodeRequired: 'Barcode is required',
        },
      },
      sales: {
        customers: {
          title: 'Customer Management',
          addNew: 'Add New Customer',
          editCustomer: 'Edit Customer',
          name: 'Name',
          company: 'Company',
          phone: 'Phone',
          whatsapp: 'WhatsApp',
          email: 'Email',
          address: 'Address',
          createdAt: 'Created At',
          updatedAt: 'Updated At',
          phoneHint: 'Leading 0 will be replaced with country code 62',
          placeholder: {
            phone: 'e.g. 628123456789',
            whatsapp: 'e.g. 628123456789',
          },
          errorSaving: 'Failed to save customer',
          deleteSuccess: 'The customer has been deleted successfully',
          deleteError: 'Failed to delete customer',
          createSuccess: 'The customer has been created successfully',
          updateSuccess: 'The customer has been updated successfully',
          details: 'Customer Details',
          viewCustomer: 'View Customer',
        },
        orders: {
          title: 'Order Management',
          addNew: 'Add New Order',
          editOrder: 'Edit Order',
          orderNo: 'Order No.',
          customer: 'Customer',
          sales: 'Sales',
          type: 'Type',
          totalAmount: 'Total Amount',
          totalPrice: 'Total Price',
          tax: 'Tax',
          status: 'Status',
          itemCount: 'Order Items',
          createdAt: 'Created At',
          updatedAt: 'Updated At',
          journalEntrySuccess: 'Journal entry created successfully',
          journalEntryError: 'Failed to create journal entry',
          fetchError: 'Failed to fetch orders',
          createSuccess: 'Order created successfully',
          updateSuccess: 'Order updated successfully',
          deleteSuccess: 'Order deleted successfully',
          deleteError: 'Failed to delete order',
          details: 'Order Details',
          viewOrder: 'View Order',
          statuses: {
            pending: 'Pending',
            processing: 'Processing',
            completed: 'Completed',
            cancelled: 'Cancelled',
          }
        },
        invoices: {
          title: 'Invoice Management',
          generateInvoice: 'Generate Invoice',
          invoiceNo: 'Invoice No.',
          downloadPDF: 'Download PDF',
          createdAt: 'Created At',
          dueDate: 'Due Date',
          status: 'Status',
          amount: 'Amount',
          customer: 'Customer',
          order: 'Order',
          items: 'Items',
          subtotal: 'Subtotal',
          tax: 'Tax',
          total: 'Total',
          currency: 'Currency',
          notes: 'Notes',
          paymentTerms: 'Payment Terms',
          bankDetails: 'Bank Details',
          companyDetails: 'Company Details',
          statuses: {
            pending: 'Pending',
            paid: 'Paid',
            overdue: 'Overdue',
          }
        },
        shipment: {
          title: 'Shipment Management',
          ordersToShip: 'Orders to Ship',
          ordersToShipDescription: 'View and process pending orders ready for shipment',
          manageShipments: 'Manage Shipments',
          shippingHistory: 'Shipping History',
          shippingHistoryDescription: 'View completed shipments and track shipping history',
          viewHistory: 'View History',
          orders: {
            title: 'Orders to Ship',
            subtitle: 'Process orders that are ready for shipment',
            unshippedOrders: 'Unshipped Orders',
            unshippedOrdersDescription: 'Orders that have been paid and are ready to be shipped',
            searchPlaceholder: 'Search by order number, customer...',
            noOrders: 'No orders to ship',
            noOrdersDescription: 'All orders have been processed or there are no paid orders yet.',
            loadError: 'Failed to load orders. Please try again.',
            orderNo: 'Order No',
            customer: 'Customer',
            address: 'Address',
            items: 'Items',
            date: 'Date',
            noAddress: 'No address provided',
            process: 'Process',
          },
          history: {
            title: 'Shipment History',
            subtitle: 'View all processed shipments',
            processNewShipment: 'Process New Shipment',
            shipments: 'Shipments',
            shipmentsDescription: 'A list of all processed shipments',
            searchPlaceholder: 'Search by order number, customer...',
            loadError: 'Failed to load shipment history. Please try again.',
            shipmentId: 'Shipment ID',
            orderNumber: 'Order Number',
            customer: 'Customer',
            items: 'Items',
            processedBy: 'Processed By',
            date: 'Date',
            noShipmentsFound: 'No shipments found',
            detail: {
              title: 'Shipment Details',
              loadError: 'Failed to load shipment details. Please try again.',
              defaultError: 'Failed to load shipment details. Please try again later.',
              backToHistory: 'Back to Shipment History',
              printFeature: 'Print feature',
              printImplementation: 'Printing functionality would be implemented here.',
              printLabel: 'Print Label',
              travelDocument: 'Travel Document',
              shippingLabel: 'SHIPPING LABEL',
              shippingAddress: 'Shipping Address',
              processedOn: 'Processed On',
              shipmentInformation: 'Shipment Information',
              detailsAboutShipment: 'Details about this shipment',
              shippedItems: 'Shipped Items',
              itemsIncluded: 'Items included in this shipment',
              totalItems: 'Total Items',
              trackingNumberCopied: 'Tracking number copied',
              trackingNumberCopiedDesc: 'The shipment ID has been copied to your clipboard.',
              to: 'Kepada',
              from: 'Dari',
              doNotDrop: 'JANGAN DIBANTING'
            },
          },
          process: {
            title: 'Process Shipment',
            subtitle: 'Prepare shipment for order',
            orderDetails: 'Order Details',
            customerDetails: 'Customer Details',
            orderItems: 'Order Items',
            orderNo: 'Order No',
            customer: 'Customer',
            phone: 'Phone',
            address: 'Address',
            orderDate: 'Order Date',
            itemType: 'Item Type',
            quantity: 'Quantity',
            scanned: 'Scanned',
            status: 'Status',
            actions: 'Actions',
            scanBarcode: 'Scan Barcode',
            scanning: 'Scanning...',
            usingBackCamera: 'Using back camera',
            usingFrontCamera: 'Using front camera',
            toggleCamera: 'Toggle Camera',
            scanSuccess: 'Scan Success',
            scanError: 'Scan Error',
            lastScanned: 'Last Scanned',
            noItemScanned: 'No item has been scanned yet',
            itemScanned: 'Item scanned: {{item}}',
            completeShipment: 'Complete Shipment',
            confirmComplete: 'Confirm Complete Shipment',
            confirmCompleteDescription: 'Are you sure you have prepared all items and want to complete this shipment?',
            incompleteShipment: 'Incomplete Shipment',
            incompleteDescription: 'You have not scanned all items. Are you sure you want to partially complete this shipment?',
            proceed: 'Proceed',
            cancel: 'Cancel',
            backToOrders: 'Back to Orders',
            completeSuccess: 'Shipment Completed',
            completeSuccessDescription: 'The shipment has been successfully processed.',
            viewDetails: 'View Details',
            viewHistory: 'View History',
            error: 'Error',
            errorDescription: 'Failed to process shipment. Please try again.',
            validationError: 'Validation Error',
            duplicateScan: 'Duplicate Scan',
            duplicateScanDescription: 'This item has already been scanned',
            maxQuantityReached: 'Maximum Quantity Reached',
            maxQuantityReachedDescription: 'Already scanned all {{quantity}} items of this type',
            itemTypeComplete: 'Item Type Complete',
            itemTypeCompleteDescription: 'All items of this type have been scanned',
            allItemsScanned: 'All Items Scanned',
            readyToComplete: 'Ready to Complete Shipment',
            notAllItemsScanned: 'Not All Items Scanned',
            scanRemainingItems: 'Please scan remaining items first',
            invalidBarcode: 'Invalid Barcode',
            invalidBarcodeDescription: 'The scanned barcode does not match any item for this order',
            progress: 'Progress',
            outOf: '{{scanned}} / {{total}} items scanned',
            completed: 'Completed',
            pending: 'Pending',
          },
          document: {
            title: 'SURAT JALAN',
            phone: 'Telepon: 0813-89-167167',
            orderNo: 'Order No',
            shipmentId: 'Shipment ID',
            date: 'Date',
            contactNo: 'No. Kontak:',
            pic: 'PIC:',
            address: 'Alamat:',
            product: 'Produk',
            specifications: 'Spesifikasi',
            skuBarcode: 'SKU/Barcode',
            quantity: 'Quantity',
            totalQuantity: 'Total Quantity:',
            shippingInstructions: 'PETUNJUK PENGIRIMAN:',
            instruction1: '1. Pastikan barang yang diterima sesuai dengan dokumen perjalanan ini.',
            instruction2: '2. Periksa kondisi barang sebelum diterima untuk memastikan tidak ada kerusakan selama pengiriman.',
            receiver: 'Penerima',
            sender: 'Pengirim',
          },
        },
        finance: {
          title: 'Finance',
          subtitle: 'Manage your financial transactions',
          
          accountsPayable: {
            title: 'Accounts Payable',
            subtitle: 'Manage your vendor bills and payments',
            vendorBills: 'Vendor Bills',
            vendors: 'Vendors',
            createBill: 'Create Bill',
          },
          
          vendorBill: {
            title: 'Vendor Bills',
            createNew: 'Create New Bill',
            saveBill: 'Save Bill',
            vendor: 'Vendor',
            selectVendor: 'Select vendor',
            amount: 'Amount (IDR)',
            billDate: 'Bill Date',
            dueDate: 'Due Date',
            pickDate: 'Pick a date',
            description: 'Description',
            descriptionPlaceholder: 'Enter bill description',
            category: 'Category',
            selectCategory: 'Select category',
            categories: {
              materials: 'Materials',
              services: 'Services',
              equipment: 'Equipment',
              utilities: 'Utilities',
              rent: 'Rent',
              other: 'Other'
            },
            status: 'Status',
            selectStatus: 'Select status',
            statuses: {
              draft: 'Draft',
              pending: 'Pending',
              paid: 'Paid',
              overdue: 'Overdue'
            },
            notes: 'Notes',
            notesPlaceholder: 'Additional notes (optional)',
            createError: 'Failed to create vendor bill',
            fetchError: 'Failed to load vendor bills. Please try again.',
            statusUpdateSuccess: 'Bill status updated to {{status}}',
            statusUpdateError: 'Failed to update bill status. Please try again.',
            due: 'Due',
            markPaid: 'Mark Paid',
            empty: {
              title: 'No vendor bills found',
              description: 'Create your first vendor bill to get started.'
            },
            columns: {
              billNo: 'Bill No',
              vendor: 'Vendor',
              amount: 'Amount',
              billDate: 'Bill Date',
              dueDate: 'Due Date',
              status: 'Status'
            },
            actions: {
              copyId: 'Copy bill ID',
              viewDetails: 'View details',
              updateStatus: 'Update status'
            },
            validation: {
              vendorRequired: 'Vendor is required',
              amountGreaterThanZero: 'Amount must be greater than 0',
              billDateRequired: 'Bill date is required',
              descriptionRequired: 'Description is required',
              categoryRequired: 'Category is required'
            }
          },
          
          vendor: {
            createNew: 'Create New Vendor',
            information: 'Vendor Information',
            name: 'Vendor Name',
            namePlaceholder: 'Enter vendor name',
            email: 'Email',
            emailPlaceholder: 'vendor@example.com',
            phone: 'Phone',
            phonePlaceholder: 'Phone number',
            address: 'Address',
            addressPlaceholder: 'Vendor address',
            taxId: 'Tax ID',
            taxIdPlaceholder: 'Tax identification number',
            notes: 'Notes',
            notesPlaceholder: 'Additional notes',
            createVendor: 'Create Vendor',
            updateVendor: 'Update Vendor',
            saveError: 'Failed to save vendor',
            createdSuccess: 'Vendor created',
            updatedSuccess: 'Vendor updated',
            validation: {
              nameRequired: 'Vendor name is required',
              emailInvalid: 'Invalid email address'
            }
          },
          accountsReceivable: {
            title: 'Accounts Receivable',
            subtitle: 'Manage customer invoices and receivables',
            paymentsReceived: 'Payments Received',
            agingReport: 'Aging Report',
            collections: 'Collections',
            reconciliation: 'Reconciliation',
            paymentTracking: {
              title: 'Payment Tracking',
              subtitle: 'Track and manage customer payments',
              invoiceNo: 'Invoice No',
              customer: 'Customer',
              amount: 'Amount',
              paymentDate: 'Payment Date',
              paymentMethod: 'Payment Method',
              reference: 'Reference',
              totalPayments: 'Total Payments',
              noData: 'No payment data available',
              fetchError: 'Failed to fetch payment data',
              errorLoading: 'Error loading payment data',
              viewProof: 'View Payment Proof',
              closeModal: 'Close',
              paymentProof: 'Payment Proof'
            },
            reconciliationDetails: {
              title: 'AR Reconciliation',
              subtitle: 'Reconcile accounts receivable balances',
              invoiceNo: 'Invoice No',
              customer: 'Customer',
              invoiceAmount: 'Invoice Amount',
              paymentsReceived: 'Payments Received',
              balance: 'Balance',
              dueDate: 'Due Date',
              lastPaymentDate: 'Last Payment Date',
              totalInvoiceAmount: 'Total Invoice Amount',
              totalPaymentsReceived: 'Total Payments Received',
              totalBalance: 'Total Balance',
              refreshData: 'Refresh Data',
              noData: 'No reconciliation data available',
              fetchError: 'Failed to fetch reconciliation data',
              errorLoading: 'Error loading reconciliation data'
            },
            aging: {
              invoiceNo: 'Invoice No',
              customer: 'Customer',
              amount: 'Amount',
              dueDate: 'Due Date',
              daysOverdue: 'Overdue {{days}} days',
              title: 'Aging Report',
              subtitle: 'View overdue invoices by age',
              current: 'Current',
              days30: '1-30 days',
              days60: '31-60 days',
              days90: '61-90 days',
              over90: 'Over 90 days',
              total: 'Total',
              noData: 'No aging data available',
              fetchError: 'Failed to fetch aging report',
              errorLoading: 'Error loading aging report',
              invoiceCount: '{{count}} invoices',
              bucket: {
                '030': '0-30 days',
                '3160': '31-60 days',
                '6190': '61-90 days',
                '90': '90+ days',
                'Over': 'Over 90 days'
              }
            },
            collection: {
              title: 'Collections',
              subtitle: 'Manage overdue invoices and receivables',
              orderNo: 'Order No',
              customer: 'Customer',
              amount: 'Amount',
              dueDate: 'Due Date',
              daysOverdue: 'Days Overdue',
              days: '{{days}} days',
              status: 'Status',
              lastContact: 'Last Contact',
              nextFollowup: 'Next Followup',
              errorLoading: 'Error loading collections data',
              noData: 'No collections data available',
              fetchError: 'Failed to fetch collections data',
              totalOverdue: 'Total Overdue',
              ordersInCollection: 'Orders in Collection',
              averageDaysOverdue: 'Average Days Overdue',
              statuses: {
                overdue: 'Overdue',
                in_collection: 'In Collection',
                legal: 'Legal',
                written_off: 'Written Off'
              }
            },
            reconciliationDetails: {
              title: 'AR Reconciliation',
              subtitle: 'Reconcile accounts receivable balances',
              invoiceNo: 'Invoice No',
              customer: 'Customer',
              invoiceAmount: 'Invoice Amount',
              paymentsReceived: 'Payments Received',
              balance: 'Balance',
              dueDate: 'Due Date',
              lastPaymentDate: 'Last Payment Date',
              totalInvoiceAmount: 'Total Invoice Amount',
              totalPaymentsReceived: 'Total Payments Received',
              totalBalance: 'Total Balance',
              errorLoading: 'Error loading reconciliation data',
              noData: 'No reconciliation data available'
            }
          }
        },
      }
    }
  },
  zh: {
    translation: {
      common: {
        loading: '加载中...',
        new: '新建',
        success: '成功',
        error: '错误',
        save: '保存',
        cancel: '取消',
        delete: '删除',
        edit: '编辑',
        close: '关闭',
        search: '搜索',
        language: '语言',
        theme: '主题',
        logout: '登出',
        english: '英语',
        chinese: '中文',
        notifications: '通知',
        noNotifications: '无通知',
        lightMode: '亮色模式',
        darkMode: '暗色模式',
        profile: '个人资料',
        settings: '设置',
        yes: '是',
        no: '否',
        selectAll: '全选',
        selectRow: '选择行',
        actions: '操作',
        create: '创建',
        update: '更新',
        saving: '保存中...',
        view: '查看',
        viewDetails: '查看详情',
        required: '必填',
        optional: '可选',
        show: '显示',
        perPage: '每页',
        unknown: '未知',
        retry: '重试',
      },
      navigation: {
        dashboard: '仪表盘',
        inventory: '库存',
        stockModule: '库存',
        divided: '分割',
        inspection: '检验',
        sales: '销售',
        customers: '客户',
        orders: '订单',
        quotes: '报价',
        tasks: '任务',
        calendar: '日历',
        kanban: '看板',
        users: '用户',
      },
      dashboard: {
        title: '仪表盘',
        overview: '总览',
        totalSales: '总销售额',
        totalInventory: '总库存',
        pendingTasks: '待处理任务',
        activeUsers: '活跃用户',
        income: '收入',
        expenses: '支出',
        profit: '利润',
        viewAll: '查看全部',
        amount: '金额',
        date: '日期',
        status: '状态',
        type: '类型',
        welcome: '欢迎访问您的仪表盘',
        analytics: '分析',
        analyticsDesc: '查看您的业务分析',
        analyticsContent: '分析内容将显示在这里',
        reports: '报告',
        reportsDesc: '查看和生成报告',
        reportsContent: '报告内容将显示在这里',
        error: '仪表盘错误',
        errorDesc: '加载仪表盘数据失败',
        cards: {
          inventory: '库存',
          itemsInStock: '库存物品',
          stock: '库存',
          divided: '分割',
          sales: '销售',
          revenueThisMonth: '本月收入',
          orders: '订单',
          tasks: '任务',
          pendingTasks: '待处理任务',
        },
        finance: {
          title: '财务',
          totalRevenue: '总收入',
          incomeFromSales: '销售收入',
          totalExpenses: '总支出',
          costsAndExpenses: '成本和费用',
          netIncome: '净收入',
          revenueLessExpenses: '收入减去支出',
          cashBalance: '现金余额',
          availableFunds: '可用资金',
          accountsReceivable: '应收账款',
          moneyOwedByCustomers: '客户欠款',
          accountsPayable: '应付账款',
          moneyOwedToVendors: '供应商欠款',
        },
        transactions: {
          title: '最近交易',
          recentTransactions: '最近交易',
          noTransactions: '无交易记录',
        },
      },
      inventory: {
        stock: {
          title: '库存管理',
          jumboRollNo: '卷号',
          barcodeId: '条码ID',
          type: '类型',
          gsm: '克重',
          width: '宽度',
          length: '长度',
          remainingLength: '剩余长度',
          low: '低',
          weight: '重量',
          containerNo: '集装箱号',
          arrivalDate: '到货日期',
          inspectedBy: '检验员',
          orderInfo: '订单信息',
          order: '订单',
          date: '日期',
          customer: '客户',
          printLabel: '打印标签',
          printLabels: '打印标签',
          addNew: '添加新库存',
          availableStock: '可用库存',
          soldStock: '已售库存',
          stockOut: '库存耗尽',
          deleteSuccess: '已删除所选库存项目。',
          deleteError: '删除库存项目失败。请重试。',
          deleteSelected: '删除所选',
          size: '尺寸',
          status: '状态',
          note: '备注',
          editStock: '编辑库存',
          addStock: '添加新库存',
          editStockDescription: '编辑现有库存项目的详细信息。',
          addStockDescription: '输入详细信息以向库存中添加新项目。',
          selectType: '选择类型',
          generateRollNoError: '生成卷号失败。请重试。',
          barcodeScanned: '条码扫描成功！',
          scanError: '扫描条码失败。请重试。',
          saveError: '保存库存失败',
        },
        divided: {
          title: '分割库存管理',
          rollNo: '卷号',
          type: '类型',
          gsm: '克重',
          current: '当前',
          containerNo: '集装箱号',
          arrivalDate: '到货日期',
          width: '宽度',
          length: '长度',
          weight: '重量',
          inspected: '已检验',
          inspectedBy: '检验员',
          orderInfo: '订单信息',
          order: '订单',
          date: '日期',
          customer: '客户',
          printLabel: '打印标签',
          printLabels: '打印标签',
          availableStock: '可用库存',
          soldStock: '已售库存',
          confirmDelete: '您确定要删除所选项目吗？',
          deleteSuccess: '已成功删除{{count}}个项目。',
          deleteError: '删除项目失败。请重试。',
          deleteSelected: '删除所选',
          confirmDeleteItem: '您确定要删除此项目吗？',
          deleteItemSuccess: '项目已成功删除',
          deleteItemError: '删除项目失败',
          addDividedStock: '添加分割库存',
          chooseAddMethod: '选择添加分割库存的方式',
          currentStock: '当前库存',
          newFromStock: '从库存新建',
          dividedRoll: '分割卷',
        },
        inspection: {
          title: '检验',
          noMatchingItem: '找不到与此条码匹配的未检验项目',
          scanError: '扫描条码失败。请重试。',
          noteViaBarcode: '通过条码扫描检验',
          stockInspectError: '检验库存失败',
          dividedInspectError: '检验分割库存失败',
          usingBackCamera: '使用后置摄像头',
          usingFrontCamera: '使用前置摄像头',
          scanning: '扫描中...',
          scanBarcode: '扫描条码',
          itemsToInspect: '待检验项目',
          waitingItems: '{{count}}个项目等待检验',
          successTitle: '项目已成功检验',
          successDescription: '{{item}}已成功检验。您想再扫描另一个项目吗？',
          noDone: '不，我已完成',
          yesScanMore: '是的，再扫描一个',
          loadError: '加载检验数据时出错。请尝试刷新页面。',
          idNumber: '编号',
          noItemsToInspect: '无待检验项目',
          inspected: '已检验',
          inspect: '检验',
          inspectStock: '检验库存',
          inspectDivided: '检验分割库存',
          inspectStockDescription: '您即将检验{{rollNo}}。此操作无法撤销。',
          inspectDividedDescription: '您即将检验分割卷{{rollNo}}。此操作无法撤销。',
          notePlaceholder: '添加检验备注（可选）',
          inspecting: '检验中...',
          confirmInspection: '确认检验',
          clickCameraToToggle: '点击摄像头按钮切换',
          stockInspectedTitle: '库存已检验',
          stockInspectedDescription: '已成功检验{{rollNo}}',
          dividedInspectedTitle: '分割库存已检验',
          dividedInspectedDescription: '已成功检验{{rollNo}}',
          inspectionError: '完成检验失败',
          inspectionCompleted: '检验完成',
          itemInspected: '项目已成功检验',
          inspectItem: '检验项目',
          scanConfirmBarcode: '扫描/确认条码',
          enterBarcode: '输入或扫描条码',
          inspectionRemarks: '检验备注',
          remarksPlaceholder: '输入关于此项目的任何备注或观察',
          completeInspection: '完成检验',
          barcodeScanned: '条码扫描成功',
          barcodeRequired: '条码为必填项',
        },
      },
      sales: {
        customers: {
          title: '客户管理',
          addNew: '添加新客户',
          editCustomer: '编辑客户',
          name: '姓名',
          company: '公司',
          phone: '电话',
          whatsapp: 'WhatsApp',
          email: '电子邮件',
          address: '地址',
          createdAt: '创建时间',
          updatedAt: '更新时间',
          phoneHint: '开头的0将替换为国家代码62',
          placeholder: {
            phone: '例如 628123456789',
            whatsapp: '例如 628123456789',
          },
          errorSaving: '保存客户失败',
          deleteSuccess: '客户已成功删除',
          deleteError: '删除客户失败',
          createSuccess: '客户已成功创建',
          updateSuccess: '客户已成功更新',
          details: '客户详情',
          viewCustomer: '查看客户',
        },
        orders: {
          title: '订单管理',
          addNew: '添加新订单',
          editOrder: '编辑订单',
          orderNo: '订单号',
          customer: '客户',
          sales: '销售',
          type: '类型',
          totalAmount: '总金额',
          totalPrice: '总价格',
          tax: '税费',
          status: '状态',
          itemCount: '订单项目',
          createdAt: '创建时间',
          updatedAt: '更新时间',
          journalEntrySuccess: '日记账条目创建成功',
          journalEntryError: '创建日记账条目失败',
          fetchError: '获取订单失败',
          createSuccess: '订单创建成功',
          updateSuccess: '订单更新成功',
          deleteSuccess: '订单删除成功',
          deleteError: '删除订单失败',
          details: '订单详情',
          viewOrder: '查看订单',
          statuses: {
            pending: '待处理',
            processing: '处理中',
            completed: '已完成',
            cancelled: '已取消',
          }
        },
        invoices: {
          title: '发票管理',
          generateInvoice: '生成发票',
          invoiceNo: '发票号',
          downloadPDF: '下载PDF',
          createdAt: '创建时间',
          dueDate: '到期日',
          status: '状态',
          amount: '金额',
          customer: '客户',
          order: '订单',
          items: '项目',
          subtotal: '小计',
          tax: '税费',
          total: '总计',
          currency: '货币',
          notes: '备注',
          paymentTerms: '付款条件',
          bankDetails: '银行详情',
          companyDetails: '公司详情',
          statuses: {
            pending: '待付款',
            paid: '已付款',
            overdue: '逾期',
          }
        },
        shipment: {
          title: '发货管理',
          ordersToShip: '待发货订单',
          ordersToShipDescription: '查看和处理准备发货的订单',
          manageShipments: '管理发货',
          shippingHistory: '发货历史',
          shippingHistoryDescription: '查看已完成的发货记录和跟踪发货历史',
          viewHistory: '查看历史',
          orders: {
            title: '待发货订单',
            subtitle: '处理准备好发货的订单',
            unshippedOrders: '未发货订单',
            unshippedOrdersDescription: '已支付并准备发货的订单',
            searchPlaceholder: '按订单号、客户搜索...',
            noOrders: '没有待发货订单',
            noOrdersDescription: '所有订单都已处理或者还没有已支付的订单。',
            loadError: '加载订单失败。请重试。',
            orderNo: '订单号',
            customer: '客户',
            address: '地址',
            items: '物品',
            date: '日期',
            noAddress: '未提供地址',
            process: '处理',
          },
          history: {
            title: '发货历史',
            subtitle: '查看所有已处理的发货',
            processNewShipment: '处理新发货',
            searchPlaceholder: '按订单号、客户搜索...',
            noShipmentsFound: '未找到发货记录',
            detail: {
              title: '发货详情'
            }
          },
          process: {
            title: '处理发货',
            subtitle: '为订单准备发货',
            orderDetails: '订单详情',
            customerDetails: '客户详情',
            orderItems: '订单物品',
            orderNo: '订单号',
            customer: '客户',
            phone: '电话',
            address: '地址',
            orderDate: '订单日期',
            itemType: '物品类型',
            quantity: '数量',
            scanned: '已扫描',
            status: '状态',
            actions: '操作',
            scanBarcode: '扫描条码',
            scanning: '扫描中...',
            usingBackCamera: '使用后置摄像头',
            usingFrontCamera: '使用前置摄像头',
            toggleCamera: '切换摄像头',
            scanSuccess: '扫描成功',
            scanError: '扫描错误',
            lastScanned: '最后扫描',
            noItemScanned: '尚未扫描任何物品',
            itemScanned: '已扫描物品: {{item}}',
            completeShipment: '完成发货',
            confirmComplete: '确认完成发货',
            confirmCompleteDescription: '确定您已准备好所有物品并完成此发货吗？',
            incompleteShipment: '未完成发货',
            incompleteDescription: '您尚未扫描所有物品。确定要部分完成此发货吗？',
            proceed: '继续',
            cancel: '取消',
            backToOrders: '返回订单',
            completeSuccess: '发货完成',
            completeSuccessDescription: '发货已成功处理。',
            viewDetails: '查看详情',
            viewHistory: '查看历史',
            error: '错误',
            errorDescription: '处理发货时出错。请重试。',
            validationError: '验证错误',
            duplicateScan: '重复扫描',
            duplicateScanDescription: '此物品已被扫描',
            maxQuantityReached: '已达到最大数量',
            maxQuantityReachedDescription: '已扫描此类型的所有 {{quantity}} 个物品',
            itemTypeComplete: '物品类型完成',
            itemTypeCompleteDescription: '已扫描此类型的所有物品',
            allItemsScanned: '所有物品已扫描',
            readyToComplete: '准备完成发货',
            notAllItemsScanned: '尚未扫描所有物品',
            scanRemainingItems: '请先扫描剩余物品',
            invalidBarcode: '无效条码',
            invalidBarcodeDescription: '扫描的条码不匹配此订单的任何物品',
            progress: '进度',
            outOf: '已扫描 {{scanned}} / {{total}} 个物品',
            completed: '已完成',
            pending: '待处理',
          },
          document: {
            title: '送货单',
            phone: '电话: 0813-89-167167',
            orderNo: '订单号',
            shipmentId: '发货编号',
            date: '日期',
            contactNo: '联系电话:',
            pic: '联系人:',
            address: '地址:',
            product: '产品',
            specifications: '规格',
            skuBarcode: '产品编号/条码',
            quantity: '数量',
            totalQuantity: '总数量:',
            shippingInstructions: '发货说明:',
            instruction1: '1. 请确保收到的货物与本送货单一致。',
            instruction2: '2. 请在接收前检查货物状况，确保在运输过程中没有损坏。',
            receiver: '收货人',
            sender: '发货人',
          },
        },
        finance: {
          title: '财务',
          subtitle: '管理您的财务交易',
          
          accountsPayable: {
            title: '应付账款',
            subtitle: '管理您的供应商账单和付款',
            vendorBills: '供应商账单',
            vendors: '供应商',
            createBill: '创建账单',
          },
          
          vendorBill: {
            title: '供应商账单',
            createNew: '创建新账单',
            saveBill: '保存账单',
            vendor: '供应商',
            selectVendor: '选择供应商',
            amount: '金额 (IDR)',
            billDate: '账单日期',
            dueDate: '到期日期',
            pickDate: '选择日期',
            description: '描述',
            descriptionPlaceholder: '输入账单描述',
            category: '类别',
            selectCategory: '选择类别',
            categories: {
              materials: '材料',
              services: '服务',
              equipment: '设备',
              utilities: '公用事业',
              rent: '租金',
              other: '其他'
            },
            status: '状态',
            selectStatus: '选择状态',
            statuses: {
              draft: '草稿',
              pending: '待处理',
              paid: '已支付',
              overdue: '逾期'
            },
            notes: '备注',
            notesPlaceholder: '附加备注（可选）',
            createError: '创建供应商账单失败',
            fetchError: '加载供应商账单失败。请重试。',
            statusUpdateSuccess: '账单状态已更新为 {{status}}',
            statusUpdateError: '更新账单状态失败。请重试。',
            due: '到期',
            markPaid: '标记为已付',
            empty: {
              title: '未找到供应商账单',
              description: '创建您的第一个供应商账单以开始。'
            },
            columns: {
              billNo: '账单号',
              vendor: '供应商',
              amount: '金额',
              billDate: '账单日期',
              dueDate: '到期日期',
              status: '状态'
            },
            actions: {
              copyId: '复制账单ID',
              viewDetails: '查看详情',
              updateStatus: '更新状态'
            },
            validation: {
              vendorRequired: '供应商是必需的',
              amountGreaterThanZero: '金额必须大于0',
              billDateRequired: '账单日期是必需的',
              descriptionRequired: '描述是必需的',
              categoryRequired: '类别是必需的'
            }
          },
          
          vendor: {
            createNew: '创建新供应商',
            information: '供应商信息',
            name: '供应商名称',
            namePlaceholder: '输入供应商名称',
            email: '电子邮箱',
            emailPlaceholder: 'vendor@example.com',
            phone: '电话',
            phonePlaceholder: '电话号码',
            address: '地址',
            addressPlaceholder: '供应商地址',
            taxId: '税号',
            taxIdPlaceholder: '税务识别号',
            notes: '备注',
            notesPlaceholder: '附加备注',
            createVendor: '创建供应商',
            updateVendor: '更新供应商',
            saveError: '保存供应商失败',
            createdSuccess: '供应商已创建',
            updatedSuccess: '供应商已更新',
            validation: {
              nameRequired: '供应商名称是必需的',
              emailInvalid: '无效的电子邮箱地址'
            }
          },
          accountsReceivable: {
            title: '应收账款',
            subtitle: '管理客户付款，跟踪账龄账户，并处理收款',
            paymentsReceived: '已收付款',
            agingReport: '账龄报告',
            collections: '收款管理',
            reconciliation: '对账',
            paymentTracking: {
              title: '付款跟踪',
              subtitle: '跟踪和管理客户付款',
              invoiceNo: '发票号码',
              customer: '客户',
              amount: '金额',
              paymentDate: '付款日期',
              paymentMethod: '付款方式',
              reference: '参考编号',
              totalPayments: '付款总额',
              noData: '没有可用的付款数据',
              fetchError: '获取付款数据失败',
              errorLoading: '加载付款数据时出错',
              viewProof: '查看付款凭证',
              closeModal: '关闭',
              paymentProof: '付款凭证'
            },
            reconciliationDetails: {
              title: '应收账款对账',
              subtitle: '核对应收账款余额',
              invoiceNo: '发票号码',
              customer: '客户',
              invoiceAmount: '发票金额',
              paymentsReceived: '已收款项',
              balance: '余额',
              dueDate: '到期日',
              lastPaymentDate: '最后付款日期',
              totalInvoiceAmount: '发票总额',
              totalPaymentsReceived: '已收款项总额',
              totalBalance: '余额总计',
              errorLoading: '加载对账数据时出错',
              noData: '没有可用的对账数据'
            },
            aging: {
              invoiceNo: 'Invoice No',
              customer: 'Customer',
              amount: 'Amount',
              dueDate: 'Due Date',
              daysOverdue: 'Overdue {{days}} days',
              title: 'Aging Report',
              subtitle: 'View overdue invoices by age',
              current: 'Current',
              days30: '1-30 days',
              days60: '31-60 days',
              days90: '61-90 days',
              over90: 'Over 90 days',
              total: 'Total',
              noData: 'No aging data available',
              fetchError: 'Failed to fetch aging report',
              errorLoading: 'Error loading aging report',
              invoiceCount: '{{count}} invoices',
              bucket: {
                '030': '0-30 days',
                '3160': '31-60 days',
                '6190': '61-90 days',
                '90': '90+ days',
                'Over': 'Over 90 days'
              }
            },
            collection: {
              title: '收款管理',
              subtitle: '管理逾期发票和收款工作',
              orderNo: '订单号',
              customer: '客户',
              amount: '金额',
              dueDate: '到期日',
              daysOverdue: '逾期天数',
              days: '{{days}} 天',
              status: '状态',
              lastContact: '最后联系',
              nextFollowup: '下次跟进',
              errorLoading: '加载收款数据时出错',
              noData: '没有可用的收款数据',
              fetchError: '获取收款数据失败',
              totalOverdue: '逾期总额',
              ordersInCollection: '收款中的订单',
              averageDaysOverdue: '平均逾期天数',
              statuses: {
                overdue: '逾期',
                in_collection: '收款中',
                legal: '法律程序',
                written_off: '已注销'
              }
            },
            reconciliationDetails: {
              title: '应收账款对账',
              subtitle: '核对应收账款余额',
              invoiceNo: '发票号码',
              customer: '客户',
              invoiceAmount: '发票金额',
              paymentsReceived: '已收款项',
              balance: '余额',
              dueDate: '到期日',
              lastPaymentDate: '最后付款日期',
              totalInvoiceAmount: '发票总额',
              totalPaymentsReceived: '已收款项总额',
              totalBalance: '余额总计',
              errorLoading: '加载对账数据时出错',
              noData: '没有可用的对账数据'
            }
          }
        },
      }
    }
  }
};

const i18nConfig: InitOptions = {
  resources,
  lng: 'en',
  fallbackLng: 'en',
  interpolation: {
    escapeValue: false,
  },
  react: {
    useSuspense: false,
  },
};

// Initialize i18n
i18n.init(i18nConfig);

// Export the i18n instance
export default i18n; 